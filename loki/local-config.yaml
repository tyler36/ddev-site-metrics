##ddev-generated

# This is a complete configuration to deploy Loki backed by the filesystem.
# The index will be shipped to the storage via tsdb-shipper.
# @See https://grafana.com/docs/loki/latest/configure/

auth_enabled: false

# Configures the server of the launched module(s).
server:
  # HTTP server listen port.
  # CLI flag: -server.http-listen-port
  http_listen_port: ${LOKI_HTTP_PORT:-3100}

# Common configuration to be shared between multiple modules.
common:
  ring:
    instance_addr: 127.0.0.1
    # Backend storage to use for the ring. Supported values are: consul, etcd,
    # inmemory, memberlist, multi.
    # CLI flag: -common.storage.ring.store
    kvstore:
      store: inmemory
  # Factor for data replication.
  # CLI flag: -common.storage.ring.replication-factor
  replication_factor: 1
  path_prefix: /tmp/loki

# Configures the chunk index schema and where it is stored.
schema_config:
  configs:
  - from: 2020-05-15
    store: tsdb
    object_store: filesystem
    schema: v13
    index:
      prefix: index_
      period: 24h

# The storage_config block configures one of many possible stores for both the index and chunks.
# Which configuration to be picked should be defined in schema_config block.
storage_config:
  filesystem:
    directory: /tmp/loki/chunks

pattern_ingester:
  # Whether the pattern ingester is enabled.
  # CLI flag: -pattern-ingester.enabled
  enabled: true
  metric_aggregation:
    loki_address: 127.0.0.1:${LOKI_HTTP_PORT:-3100}

# The limits_config block configures global and per-tenant limits in Loki. The
# values here can be overridden in the `overrides` section of the runtime_config
# file
limits_config:
  metric_aggregation_enabled: true
  allow_structured_metadata: true
  volume_enabled: true
  retention_period: 24h # 24h
