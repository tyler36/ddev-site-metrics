// ##ddev-generated
/**
 * 'discovery.docker' discovers Docker Engine containers and exposes them as targets.
 * @See https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.docker/
 */
discovery.docker "docker" {
  host = "unix:///var/run/docker.sock"
  refresh_interval = "5s"
}

/**
 * 'discovery.relabel' rewrites the label set of the input targets by applying one or more relabeling rules.
 * If no rules are defined, then the input targets are exported as-is.
 * @See https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/
 */
discovery.relabel "docker" {
  targets = []

  rule {
    source_labels = ["__meta_docker_container_name"]
    regex         = "/(.*)"
    target_label  = "container"
  }
}

/**
 * 'loki.source.docker' reads log entries from Docker containers and forwards them to other loki.* components.
 * @See https://grafana.com/docs/alloy/latest/reference/components/loki/loki.source.docker/
 */
loki.source.docker "docker" {
  host             = "unix:///var/run/docker.sock"
  targets          = discovery.docker.docker.targets
  forward_to       = [loki.process.docker.receiver]
  relabel_rules    = discovery.relabel.docker.rules
  refresh_interval = "5s"
}

/**
 * 'loki.process' receives log entries from other loki components, applies one or more processing stages,
 * and forwards the results to the list of receivers in the componentâ€™s arguments.
 * @See https://grafana.com/docs/alloy/latest/reference/components/loki/loki.process/
 *
 * 'loki.write.default.receiver' is defined in `alloy/ddev-loki.alloy`
 */
loki.process "docker" {
  stage.static_labels {
    values = {
        env = "production",
      }
  }
  forward_to = [loki.write.default.receiver]
}
